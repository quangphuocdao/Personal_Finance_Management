-- Investigate full information of this dataset
SELECT * FROM sales;

-- Check distinct values
SELECT DISTINCT(ordernumber) FROM sales; -- 307 distinct values
SELECT DISTINCT(quantityordered) FROM sales; -- 58 distinct values
SELECT DISTINCT(orderlinenumber) FROM sales; -- 18 distinct values

SELECT DISTINCT(status) FROM sales; -- full info -> nice one to plot
SELECT DISTINCT(year_id) FROM sales; -- nice to plot
SELECT DISTINCT(productline) FROM sales; -- transport -> nice one to plot
SELECT DISTINCT(country) FROM sales; -- 19 countries 
SELECT DISTINCT(dealsize) FROM sales; -- 3 sizes
SELECT DISTINCT(territory) FROM sales; -- 4 territories

-- ANALYSIS:

-- 1. Grouping sales by some factors
-- Start by grouping sales by productline
SELECT productline, SUM(sales) AS revenue
FROM sales
GROUP BY productline
ORDER BY revenue DESC; 

-- Grouping sales by year_id
SELECT year_id, SUM(sales) AS revenue
FROM sales
GROUP BY year_id
ORDER BY revenue DESC;

-- Grouping sales by dealsize
SELECT dealsize, SUM(sales) AS revenue
FROM sales
GROUP BY dealsize
ORDER BY revenue DESC;

-- Grouping sales by country
SELECT country, SUM(sales) AS revenue
FROM sales
GROUP BY country
ORDER BY revenue DESC;

-- 2. Deep analysis on this dataset
-- What was the best month for sales in a specific year? How much was earned on that month?
SELECT month_id, SUM(sales) as revenue, COUNT(quantityordered) as frequency
FROM sales
WHERE year_id = '2021' -- can change the specific year to see the revenue and number of ordered product -> November is the best month for sale in 2021 and 2022. 
GROUP BY month_id
ORDER BY frequency DESC;

-- According to the best month for sales is November in 2021 and 2022, what type of products did they sell most/least in this month?
SELECT productline, SUM(sales) as revenue, COUNT(quantityordered) as quantity 
FROM sales
WHERE month_id = '11' AND year_id = '2021' -- classic cars get highest revenue, and number of orders are 114. Otherwise, train gets lowest revenue, and number of orders are 9
GROUP BY productline
ORDER BY quantity DESC;

SELECT productline, SUM(sales) as revenue, COUNT(quantityordered) as quantity 
FROM sales
WHERE month_id = '11' AND year_id = '2022' -- classic cars get highest revenue, and number of orders are 105. Otherwise, train gets lowest revenue, and number of orders are 6
GROUP BY productline
ORDER BY quantity DESC;

-- Introduction to RFM Analysis:
-- Recency-Frequency-Monetary (RFM). It is an technique that use past purchase behavior to segment customers
-- An RFM report is a way of segmenting customers using three key metrics: recency (how long ago their last purchase was -> data points: last order date), frequency (how often they purchase -> data points: count of total orders), monetary value (how much they spent -> total spend)

-- * Find the best customer (who can be described as the most potential customer, follow to the RFM Analysis):
with RFM as (
SELECT customername,
SUM(sales) as MonetaryValue,
AVG(sales) as AVGMonetaryValue, 
COUNT(ordernumber) as Frequency,
MAX(orderdate) as last_order_date,
(SELECT MAX(orderdate) FROM sales) as max_order_date,
DATEDIFF((SELECT MAX(orderdate) FROM sales), MAX(orderdate)) AS Recency
FROM sales
GROUP BY customername
ORDER BY frequency DESC
),

rfm_calc as (
SELECT *,
NTILE(4) OVER (ORDER BY Recency ASC) AS rfm_recency, -- The more recent the last purchase, the higher the rank.
NTILE(4) OVER (ORDER BY Frequency DESC) AS rfm_frequency,  -- The more frequency purchase, the higher the rank
NTILE(4) OVER (ORDER BY MonetaryValue DESC) AS rfm_monetary -- The more money spent, the higher the rank
FROM RFM
ORDER BY Frequency DESC
),

rfm_full as (
SELECT *, (rfm_recency + rfm_frequency + rfm_monetary) as rfm_cell,
CONCAT(rfm_recency, rfm_frequency, rfm_monetary
  ) AS rfm_cell_string
FROM rfm_calc
)

SELECT CUSTOMERNAME , rfm_recency, rfm_frequency, rfm_monetary,
	CASE
		WHEN rfm_cell_string in (444, 443 , 434, 433, 432, 423, 344, 343, 441, 414, 413) THEN 'lost_customers'  -- Lost customers
		WHEN rfm_cell_string in (422, 421, 412, 411) THEN 'should notice, cannot lose' -- (Big spenders who havenâ€™t purchased lately) slipping away
		WHEN rfm_cell_string in (244, 144, 224, 234) THEN 'new customers' -- Recently purchase
		WHEN rfm_cell_string in (311, 321, 333, 332, 322, 233, 323) THEN 'potential churners' -- Can stop using/buying the products
		WHEN rfm_cell_string in (221, 212, 211, 232, 222, 133, 223, 123, 132) THEN 'active' -- (Customers who buy often & recently, but at low price points)
		WHEN rfm_cell_string in (122, 121, 112, 111) THEN 'loyal'
	END rfm_segment
FROM rfm_full;

-- Extra
-- What city has the highest number of sales in a specific country
SELECT CITY, sum(sales) as Revenue
FROM Sales
WHERE country = 'UK'
GROUP BY city
ORDER BY revenue DESC;

-- What is the best product in United States?
SELECT country, YEAR_ID, PRODUCTLINE, sum(sales) as Revenue
FROM sales
WHERE country = 'USA'
GROUP BY country, YEAR_ID, PRODUCTLINE
ORDER BY 4 DESC;
